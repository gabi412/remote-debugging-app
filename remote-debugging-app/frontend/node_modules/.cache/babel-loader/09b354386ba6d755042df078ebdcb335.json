{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef, useEffect, useImperativeHandle, useState, useMemo } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport './codemirror.css';\nimport './index.css';\nvar defaultOptions = {\n  tabSize: 2,\n  autoCloseBrackets: true,\n  matchBrackets: true,\n  showCursorWhenSelecting: true,\n  // 显示行号\n  lineNumbers: true,\n  fullScreen: true\n};\n\nfunction ReactCodeMirror() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ref = arguments.length > 1 ? arguments[1] : undefined;\n  var _props$options = props.options,\n      options = _props$options === void 0 ? {} : _props$options,\n      _props$value = props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      _props$width = props.width,\n      width = _props$width === void 0 ? '100%' : _props$width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? '100%' : _props$height;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      editor = _useState2[0],\n      setEditor = _useState2[1];\n\n  var textareaRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      editor: editor\n    };\n  }, [editor]); // 将props中所有的事件处理函数映射并保存\n\n  function getEventHandleFromProps() {\n    var propNames = Object.keys(props);\n    var eventHandle = propNames.filter(function (keyName) {\n      return /^on+/.test(keyName);\n    });\n    var eventDict = {};\n    eventHandle.forEach(function (ele) {\n      var name = ele.slice(2);\n      eventDict[ele] = name.replace(name[0], name[0].toLowerCase());\n    });\n    return eventDict;\n  } // http://codemirror.net/doc/manual.html#config\n\n\n  function setOptions(_x) {\n    return _setOptions.apply(this, arguments);\n  }\n\n  function _setOptions() {\n    _setOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(instance) {\n      var opt,\n          mode,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              opt = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (!(_typeof(opt) === 'object' && window)) {\n                _context.next = 8;\n                break;\n              }\n\n              mode = CodeMirror.findModeByName(opt.mode || '');\n\n              if (!(mode && mode.mode)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return import(\"codemirror/mode/\".concat(mode.mode, \"/\").concat(mode.mode, \".js\"));\n\n            case 6:\n              if (mode) {\n                opt.mode = mode.mime;\n              }\n\n              Object.keys(opt).forEach(function (name) {\n                if (opt[name] && JSON.stringify(opt[name])) {\n                  instance.setOption(name, opt[name]);\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _setOptions.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!editor && window) {\n      // 生成codemirror实例\n      var instance = CodeMirror.fromTextArea(textareaRef.current, _objectSpread(_objectSpread({}, defaultOptions), options));\n      var eventDict = getEventHandleFromProps();\n      Object.keys(eventDict).forEach(function (event) {\n        instance.on(eventDict[event], props[event]);\n      });\n      instance.setValue(value || '');\n\n      if (width || height) {\n        // 设置尺寸\n        instance.setSize(width, height);\n      }\n\n      setEditor(instance);\n      setOptions(instance, _objectSpread(_objectSpread({}, defaultOptions), options));\n    }\n\n    return function () {\n      if (editor && window) {\n        editor.toTextArea();\n        setEditor(undefined);\n      }\n    };\n  }, []);\n  useMemo(function () {\n    if (!editor || !window) return;\n    var val = editor.getValue();\n\n    if (value !== undefined && value !== val) {\n      editor.setValue(value);\n    }\n  }, [value]);\n  useMemo(function () {\n    if (!editor || !window) return;\n    editor.setSize(width, height);\n  }, [width, height]);\n  useMemo(function () {\n    if (!editor || !window) return;\n    setOptions(editor, _objectSpread(_objectSpread({}, defaultOptions), options));\n  }, [options]);\n  return /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textareaRef\n  });\n}\n\nexport default /*#__PURE__*/React.forwardRef(ReactCodeMirror);","map":{"version":3,"sources":["../../src/index.js"],"names":["defaultOptions","tabSize","autoCloseBrackets","matchBrackets","showCursorWhenSelecting","lineNumbers","fullScreen","props","ref","options","value","width","height","editor","setEditor","useState","textareaRef","useRef","useImperativeHandle","propNames","Object","eventHandle","eventDict","name","ele","opt","mode","CodeMirror","JSON","instance","useEffect","getEventHandleFromProps","setOptions","useMemo","val","React"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useImperativeHandle, useState, useMemo } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport './codemirror.css';\nimport './index.css';\n\nconst defaultOptions = {\n  tabSize: 2,\n  autoCloseBrackets: true,\n  matchBrackets: true,\n  showCursorWhenSelecting: true,\n  // 显示行号\n  lineNumbers: true,\n  fullScreen: true,\n}\n\nfunction ReactCodeMirror(props = {}, ref) {\n  const { options = {}, value = '', width = '100%', height = '100%'  } = props;\n  const [editor, setEditor] = useState();\n  const textareaRef = useRef();\n  useImperativeHandle(ref, () => ({ editor }), [editor]);\n  // 将props中所有的事件处理函数映射并保存\n  function getEventHandleFromProps() {\n    const propNames = Object.keys(props);\n    const eventHandle = propNames.filter((keyName) => {\n      return /^on+/.test(keyName);\n    });\n\n    const eventDict = {};\n    eventHandle.forEach((ele) => {\n      const name = ele.slice(2);\n      eventDict[ele] = name.replace(name[0],name[0].toLowerCase());\n    });\n\n    return eventDict;\n  }\n\n  // http://codemirror.net/doc/manual.html#config\n  async function setOptions(instance, opt = {}) {\n    if (typeof opt === 'object' && window) {\n      const mode = CodeMirror.findModeByName(opt.mode || '');\n      if (mode && mode.mode) {\n        await import(`codemirror/mode/${mode.mode}/${mode.mode}.js`);\n      }\n      if (mode) {\n        opt.mode = mode.mime;\n      }\n      Object.keys(opt).forEach((name) => {\n        if (opt[name] && JSON.stringify(opt[name])) {\n          instance.setOption(name, opt[name]);\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!editor && window) {\n      // 生成codemirror实例\n      const instance = CodeMirror.fromTextArea(textareaRef.current, {...defaultOptions, ...options});\n      const eventDict = getEventHandleFromProps();\n      Object.keys(eventDict).forEach((event) => {\n        instance.on(eventDict[event], props[event]);\n      });\n      instance.setValue(value || '');\n\n      if (width || height) {\n        // 设置尺寸\n        instance.setSize(width, height);\n      }\n      setEditor(instance);\n      setOptions(instance, {...defaultOptions, ...options});\n    }\n    return () => {\n      if (editor && window) {\n        editor.toTextArea();\n        setEditor(undefined);\n      }\n    }\n  }, []);\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    const val = editor.getValue();\n    if (value !== undefined && value !== val) {\n      editor.setValue(value);\n    }\n  }, [value]);\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    editor.setSize(width, height);\n  }, [width, height]);\n\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    setOptions(editor, {...defaultOptions, ...options});\n  }, [options]);\n  \n  return (\n    <textarea ref={textareaRef} />\n  );\n}\n\nexport default React.forwardRef(ReactCodeMirror);"]},"metadata":{},"sourceType":"module"}