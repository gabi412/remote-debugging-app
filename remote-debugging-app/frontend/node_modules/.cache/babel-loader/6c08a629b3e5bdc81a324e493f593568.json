{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Facultate\\\\Licenta\\\\remote-debugging-app\\\\remote-debugging-app\\\\frontend\\\\src\\\\components\\\\LoadFile.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass LoadFile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // initial, niciun fisier nu este selectat\n      selectedFile: null,\n      valid: false\n    };\n\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n\n    this.onFileUpload = () => {\n      // creare obiect de tip FormData\n      const data = new FormData();\n      data.append(\"file\", this.state.selectedFile);\n      var extension = this.state.selectedFile.name.split(\".\")[1];\n\n      if (!(extension === \"cpp\" || extension === \"c\" || extension === \"elf\")) {\n        alert(\"Adauga un fisier .c/elf\");\n      } else {\n        //trimit fisierul catre backend\n        this.setState({\n          valid: true\n        });\n        axios.post(\"http://192.168.0.111:8081/load-file\", data, {}).then(res => {\n          console.log(res.statusText);\n        });\n      }\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile && this.state.valid) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Fisierul tau:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Nume: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tip: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Alege fisierul sursa apoi apasa butonul de upload.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Incarca un fisier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoadFile;","map":{"version":3,"sources":["D:/Facultate/Licenta/remote-debugging-app/remote-debugging-app/frontend/src/components/LoadFile.js"],"names":["React","axios","LoadFile","Component","state","selectedFile","valid","onFileChange","event","setState","target","files","loaded","onFileUpload","data","FormData","append","extension","name","split","alert","post","then","res","console","log","statusText","fileData","type","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACN;AACAC,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAD6B;;AAAA,SAQrCC,YARqC,GAQrBC,KAAD,IAAW;AAExB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAEG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAAd;AACD,KAXoC;;AAAA,SAcrCC,YAdqC,GActB,MAAM;AAEnB;AACA,YAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKZ,KAAL,CAAWC,YAA/B;AACA,UAAIY,SAAS,GAAG,KAAKb,KAAL,CAAWC,YAAX,CAAwBa,IAAxB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAhB;;AAEA,UAAI,EAAEF,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAK,GAArC,IAA4CA,SAAS,KAAK,KAA5D,CAAJ,EAAwE;AACtEG,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,OAFD,MAEO;AAEL;AACA,aAAKX,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE;AAAR,SAAd;AACAL,QAAAA,KAAK,CAACoB,IAAN,CAAW,qCAAX,EAAkDP,IAAlD,EAAwD,EAAxD,EAA4DQ,IAA5D,CAAkEC,GAAD,IAAS;AACxEC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,UAAhB;AACD,SAFD;AAGD;AACF,KA/BoC;;AAAA,SAkCrCC,QAlCqC,GAkC1B,MAAM;AACf,UAAI,KAAKvB,KAAL,CAAWC,YAAX,IAA2B,KAAKD,KAAL,CAAWE,KAA1C,EAAiD;AAC/C,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,iCAAU,KAAKF,KAAL,CAAWC,YAAX,CAAwBa,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,gCAAS,KAAKd,KAAL,CAAWC,YAAX,CAAwBuB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD,MAQO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAnDoC;AAAA;;AAqDrCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKtB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,OAAO,EAAE,KAAKM,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EASG,KAAKc,QAAL,EATH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAnEoC;;AAsEvC,eAAezB,QAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass LoadFile extends React.Component {\r\n  state = {\r\n    // initial, niciun fisier nu este selectat\r\n    selectedFile: null,\r\n    valid: false,\r\n  };\r\n\r\n  // la selectarea unui fisier\r\n  onFileChange = (event) => {\r\n    \r\n    this.setState({ selectedFile: event.target.files[0], loaded: 0 });\r\n  };\r\n\r\n \r\n  onFileUpload = () => {\r\n\r\n    // creare obiect de tip FormData\r\n    const data = new FormData();\r\n    data.append(\"file\", this.state.selectedFile);\r\n    var extension = this.state.selectedFile.name.split(\".\")[1];\r\n   \r\n    if (!(extension === \"cpp\" || extension === \"c\" || extension === \"elf\")) {\r\n      alert(\"Adauga un fisier .c/elf\");\r\n    } else {\r\n      \r\n      //trimit fisierul catre backend\r\n      this.setState({valid: true});\r\n      axios.post(\"http://192.168.0.111:8081/load-file\", data, {}).then((res) => {\r\n        console.log(res.statusText);\r\n      });\r\n    }\r\n  };\r\n\r\n  //se afiseaza datele fisierului doar dupa ce s-a incarcat\r\n  fileData = () => {\r\n    if (this.state.selectedFile && this.state.valid) {\r\n      return (\r\n        <div>\r\n          <h2>Fisierul tau:</h2>\r\n          <p>Nume: {this.state.selectedFile.name}</p>\r\n          <p>Tip: {this.state.selectedFile.type}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <h4>Alege fisierul sursa apoi apasa butonul de upload.</h4>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Incarca un fisier</h2>\r\n\r\n        <div>\r\n          <input type=\"file\" onChange={this.onFileChange} />\r\n          <br />\r\n          <br />\r\n          <button onClick={this.onFileUpload}>Upload!</button>\r\n        </div>\r\n        {this.fileData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadFile;\r\n"]},"metadata":{},"sourceType":"module"}